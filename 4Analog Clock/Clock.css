
*{
    margin:0;
    padding:0;
    box-sizing: border-box;
    font-family: sans-serif;
    color:white
}

body{
    background: linear-gradient(to bottom right , #de347f ,#fff, #42dfff);
    height: 100vh;
}

.container{
    height:100%;
    width:100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.clock{
    width:450px ;
    height: 450px;
    border: 1px solid rgb(94, 78, 78);
    border-radius: 50%;
    box-shadow: 0 0 30px white , 2px 2px 10px white inset ;
    background: linear-gradient(to top left , #42dfff , #de347f);
    position:relative;
    display:flex;
    justify-content: center;
    align-items: center;
}

.clock span{
    position:absolute;
    transform: rotate(calc(30deg*var(--i)));
    inset:12px;
    /* This property sets the distance of the <span> elements from the edges of their containing element. inset is a shorthand property for setting top, right, bottom, and left values simultaneously. */
    text-align: center;
    font-size: 40px;
}

.clock span b{
    /* The combination of rotations on the parent <span> and the counter-rotation on the nested <b> elements can contribute to a 3D visual effect and a visual balance. By adjusting the rotation angles, designers can simulate depth and perspective, enhancing the appearance of the clock elements. */
    transform: rotate(calc(-30deg*var(--i)));
    display: inline-block;
    /* This property sets the display type of the <b> elements to inline-block, allowing them to be positioned inline (like text) but also have block-level properties  */
}

.clock::before{
    content: '';
    position: absolute;
    width:10px;
    height:10px;
    background-color: #fff;
    border-radius: 50%;
    z-index: 2.3;
}

.hands{
    position:absolute;
    display:flex;
    justify-content: center;
    align-items: flex-end;
}

.hands i{
    position: absolute;
    width: 4px;
    height: var(--ht);
    background-color: var(--clr);
    /* Here only one property differs that is why we use variable to style 3 div with different colours */
    border-radius: 8px;
}






